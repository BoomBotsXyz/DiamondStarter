/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RevertFacet,
  RevertFacetInterface,
} from "../../../mocks/facets/RevertFacet";

const _abi = [
  {
    inputs: [],
    name: "revertWithReason",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "revertWithoutReason",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101bd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634167168d1461003b5780635b2dd10014610045575b600080fd5b61004361004f565b005b61004d610090565b005b61006367f2c19326e726018260c01b610107565b61007767d62742abeedf3b9b60c01b610107565b61008b67ebaaf55f6436adf760c01b610107565b600080fd5b6100a46740a1eb6a31b1028860c01b610107565b6100b86787075000ff83d10660c01b610107565b6100cc67f4be67ad396549dd60c01b610107565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fe90610167565b60405180910390fd5b50565b600082825260208201905092915050565b7f52657665727446616365742063616c6c206661696c6564000000000000000000600082015250565b600061015160178361010a565b915061015c8261011b565b602082019050919050565b6000602082019050818103600083015261018081610144565b905091905056fea264697066735822122030eca0ede0c373da4c1ac6abc08e1693021ec28a8feef903d2f386d365c2950264736f6c63430008180033";

type RevertFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RevertFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RevertFacet__factory extends ContractFactory {
  constructor(...args: RevertFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RevertFacet> {
    return super.deploy(overrides || {}) as Promise<RevertFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RevertFacet {
    return super.attach(address) as RevertFacet;
  }
  override connect(signer: Signer): RevertFacet__factory {
    return super.connect(signer) as RevertFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RevertFacetInterface {
    return new utils.Interface(_abi) as RevertFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RevertFacet {
    return new Contract(address, _abi, signerOrProvider) as RevertFacet;
  }
}
