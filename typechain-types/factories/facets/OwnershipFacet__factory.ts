/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  OwnershipFacet,
  OwnershipFacetInterface,
} from "../../facets/OwnershipFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506105e6806100206000396000f3fe6080604052600436106100295760003560e01c80638da5cb5b1461002e578063f2fde38b14610059575b600080fd5b34801561003a57600080fd5b50610043610075565b60405161005091906104ba565b60405180910390f35b610073600480360381019061006e9190610506565b6100ac565b005b600061008b672a9f66d1be352b8e60c01b610124565b61009f67561004f33f100aac60c01b610124565b6100a7610127565b905090565b6100c067d92ccb1a29ca5af860c01b610124565b6100d467af85c19b653939d760c01b610124565b6100e8673fb3ee513003222b60c01b610124565b6100f0610182565b6101046775f339d13ae1192460c01b610124565b61011867bead00ff0cee03e860c01b610124565b61012181610281565b50565b50565b600061013d67f5304865b177c69360c01b6103f8565b6101516787eab9531e553d9860c01b6103f8565b6101596103fb565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101966709700a541ee6967260c01b6103f8565b6101aa67b046ec0d4b28bd2060c01b6103f8565b6101be67884b48b9eeafd6ed60c01b6103f8565b6101d2679f88061387491d0d60c01b6103f8565b6101da6103fb565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461026b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026290610590565b60405180910390fd5b61027f6721e1920faf4d07f460c01b6103f8565b565b61029567ad47c3bff796feb960c01b6103f8565b6102a9672111c6e5cf3a271360c01b6103f8565b6102bd6718ff43c957bcc87060c01b6103f8565b60006102c76103fb565b90506102dd67b64fcb475f62cbea60c01b6103f8565b6102f167fec2e96b77f4067160c01b6103f8565b60008160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061032e671d6df2ae3754aa5e60c01b6103f8565b828260040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610385675d4ad246ffff451e60c01b6103f8565b61039967d06c245bbbf210d560c01b6103f8565b8273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b50565b6000610411675cbf200602296d4a60c01b6103f8565b61042567d3511f8045f97df560c01b6103f8565b610439679ea969cad11fce6160c01b6103f8565b60007f0f19fc389558a4392abcc14f98886a1c06f49aadd6fcf40f9384f852ec7b76f59050610472674b54581d6e930a4060c01b6103f8565b8091505090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104a482610479565b9050919050565b6104b481610499565b82525050565b60006020820190506104cf60008301846104ab565b92915050565b600080fd5b6104e381610499565b81146104ee57600080fd5b50565b600081359050610500816104da565b92915050565b60006020828403121561051c5761051b6104d5565b5b600061052a848285016104f1565b91505092915050565b600082825260208201905092915050565b7f4c69624469616d6f6e643a20216f776e65720000000000000000000000000000600082015250565b600061057a601283610533565b915061058582610544565b602082019050919050565b600060208201905081810360008301526105a98161056d565b905091905056fea2646970667358221220626b6e97107ef57652df0f21d72306ef8883ada380d7c50aeeb4665de38f122b64736f6c63430008180033";

type OwnershipFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OwnershipFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OwnershipFacet__factory extends ContractFactory {
  constructor(...args: OwnershipFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OwnershipFacet> {
    return super.deploy(overrides || {}) as Promise<OwnershipFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OwnershipFacet {
    return super.attach(address) as OwnershipFacet;
  }
  override connect(signer: Signer): OwnershipFacet__factory {
    return super.connect(signer) as OwnershipFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OwnershipFacetInterface {
    return new utils.Interface(_abi) as OwnershipFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnershipFacet {
    return new Contract(address, _abi, signerOrProvider) as OwnershipFacet;
  }
}
