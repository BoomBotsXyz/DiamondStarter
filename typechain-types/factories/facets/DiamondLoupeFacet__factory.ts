/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DiamondLoupeFacet,
  DiamondLoupeFacetInterface,
} from "../../facets/DiamondLoupeFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address",
      },
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "facetFunctionSelectors_",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "supported",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e46806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80637a0ed627116100505780637a0ed627146100ba578063adfca15e146100d8578063cdffacc61461010857610067565b806301ffc9a71461006c57806352ef6b2c1461009c575b600080fd5b6100866004803603810190610081919061094a565b610138565b6040516100939190610992565b60405180910390f35b6100a4610213565b6040516100b19190610a9d565b60405180910390f35b6100c2610300565b6040516100cf9190610c7c565b60405180910390f35b6100f260048036038101906100ed9190610cca565b610621565b6040516100ff9190610d66565b60405180910390f35b610122600480360381019061011d919061094a565b61075c565b60405161012f9190610d97565b60405180910390f35b600061014e67de1feb2417cef7ff60c01b610839565b61016267b3bfe5fecdf4833960c01b610839565b6101766734ddd69f2a7de80160c01b610839565b600061018061083c565b90506101966733aadc0dee781d9360c01b610839565b6101aa678a557146de6b1da260c01b610839565b806003016000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff16915050919050565b606061022967ffeb82a989e3deb960c01b610839565b61023d678e40a0de8913fc9f60c01b610839565b61025167396499c54a53119e60c01b610839565b600061025b61083c565b90506102716744300875a2972ec360c01b610839565b806002018054806020026020016040519081016040528092919081815260200182805480156102f557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116102ab575b505050505091505090565b6060610316674b624cf88b81bc2c60c01b610839565b61032a67a41ec838f30d548160c01b610839565b61033e6795d468a0d5f8a2d060c01b610839565b600061034861083c565b905061035e670c5bcda2cf66d28f60c01b610839565b61037267d2e68cf7865d411360c01b610839565b600081600201805490509050610392670b55718af89d111460c01b610839565b8067ffffffffffffffff8111156103ac576103ab610db2565b5b6040519080825280602002602001820160405280156103e557816020015b6103d26108bd565b8152602001906001900390816103ca5790505b5092506103fc6768f48f0283ff8e6d60c01b610839565b610410679bc5656648ead1b260c01b610839565b60005b8181101561061b5761042f6795d0fcffa42d876260c01b610839565b61044367c2300214ccaf959860c01b610839565b600083600201828154811061045b5761045a610de1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061049c67cd8cb5f97c8f54ee60c01b610839565b808583815181106104b0576104af610de1565b5b60200260200101516000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061050267e5be742878e2ad8c60c01b610839565b8360010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054806020026020016040519081016040528092919081815260200182805480156105d257602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841161057f5790505b50505050508583815181106105ea576105e9610de1565b5b60200260200101516020018190525061060d6716154d2197dfed3160c01b610839565b818060010192505050610413565b50505090565b606061063767cc61156f32e139e160c01b610839565b61064b671c83413c5dd39cbc60c01b610839565b61065f670414c31cbb948fc660c01b610839565b600061066961083c565b905061067f67f1a8aa23715ebcff60c01b610839565b8060010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180548060200260200160405190810160405280929190818152602001828054801561074f57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116106fc5790505b5050505050915050919050565b6000610772675d72907cdd31b37960c01b610839565b6107866702312ce709e1fe5c60c01b610839565b61079a67f282692dffb4622c60c01b610839565b60006107a461083c565b90506107ba67337c24e7888c97b860c01b610839565b806000016000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b50565b6000610852675cbf200602296d4a60c01b6108ba565b61086667d3511f8045f97df560c01b6108ba565b61087a679ea969cad11fce6160c01b6108ba565b60007f0f19fc389558a4392abcc14f98886a1c06f49aadd6fcf40f9384f852ec7b76f590506108b3674b54581d6e930a4060c01b6108ba565b8091505090565b50565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610927816108f2565b811461093257600080fd5b50565b6000813590506109448161091e565b92915050565b6000602082840312156109605761095f6108ed565b5b600061096e84828501610935565b91505092915050565b60008115159050919050565b61098c81610977565b82525050565b60006020820190506109a76000830184610983565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a04826109d9565b9050919050565b610a14816109f9565b82525050565b6000610a268383610a0b565b60208301905092915050565b6000602082019050919050565b6000610a4a826109ad565b610a5481856109b8565b9350610a5f836109c9565b8060005b83811015610a90578151610a778882610a1a565b9750610a8283610a32565b925050600181019050610a63565b5085935050505092915050565b60006020820190508181036000830152610ab78184610a3f565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610b20816108f2565b82525050565b6000610b328383610b17565b60208301905092915050565b6000602082019050919050565b6000610b5682610aeb565b610b608185610af6565b9350610b6b83610b07565b8060005b83811015610b9c578151610b838882610b26565b9750610b8e83610b3e565b925050600181019050610b6f565b5085935050505092915050565b6000604083016000830151610bc16000860182610a0b565b5060208301518482036020860152610bd98282610b4b565b9150508091505092915050565b6000610bf28383610ba9565b905092915050565b6000602082019050919050565b6000610c1282610abf565b610c1c8185610aca565b935083602082028501610c2e85610adb565b8060005b85811015610c6a5784840389528151610c4b8582610be6565b9450610c5683610bfa565b925060208a01995050600181019050610c32565b50829750879550505050505092915050565b60006020820190508181036000830152610c968184610c07565b905092915050565b610ca7816109f9565b8114610cb257600080fd5b50565b600081359050610cc481610c9e565b92915050565b600060208284031215610ce057610cdf6108ed565b5b6000610cee84828501610cb5565b91505092915050565b600082825260208201905092915050565b6000610d1382610aeb565b610d1d8185610cf7565b9350610d2883610b07565b8060005b83811015610d59578151610d408882610b26565b9750610d4b83610b3e565b925050600181019050610d2c565b5085935050505092915050565b60006020820190508181036000830152610d808184610d08565b905092915050565b610d91816109f9565b82525050565b6000602082019050610dac6000830184610d88565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220dc717feb6b67a35dc7e32a368b24169d96d77d0dc071b6d9daf995e10b54e91364736f6c63430008180033";

type DiamondLoupeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondLoupeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondLoupeFacet__factory extends ContractFactory {
  constructor(...args: DiamondLoupeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondLoupeFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondLoupeFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondLoupeFacet {
    return super.attach(address) as DiamondLoupeFacet;
  }
  override connect(signer: Signer): DiamondLoupeFacet__factory {
    return super.connect(signer) as DiamondLoupeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondLoupeFacetInterface {
    return new utils.Interface(_abi) as DiamondLoupeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondLoupeFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondLoupeFacet;
  }
}
